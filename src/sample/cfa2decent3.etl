//import "cfa-init.etl";

pre {
  //Some initialization
  "Running cfa2decent3".println();
  ("DECENT States: "+DECENT!State.allInstances().size()).println();
  var Model = DECENT!Model.allInstances().first();


  ("Initializing CFA definitions").println();
  //This should only run once!!!
  
  var attributes = new OrderedSet;
  attributes.add("BugFix");
  attributes.add("WeightFactor");
  attributes.add("TotalWeight");
  attributes.add("AverageWeight");
  attributes.add("TotalBugWeight");
  attributes.add("AverageBugWeight");
  attributes.add("CausesCount");
  attributes.add("FixesCount");
  attributes.add("GlobalBugFix");
  attributes.add("GlobalWeightFactor");
  attributes.add("GlobalTotalWeight");
  attributes.add("GlobalAverageWeight");
  attributes.add("GlobalTotalBugWeight");
  attributes.add("GlobalAverageBugWeight");
  attributes.add("GlobalCausesCount");
  attributes.add("GlobalFixesCount");

  attributes.add("CarriedTotalBugWeight");
  attributes.add("ClearedTotalBugWeight");

  for (a in attributes) {
	  var Attribute = new DECENT!Attribute;
	  Attribute.name = a;
      if (Model.attributePool.attributes.select(a|a.name = Attribute.name).size() = 0) {
	    Model.attributePool.attributes.add(Attribute);
      }
  }


  
  var BugFixAttribute = DECENT!Attribute.allInstances().select(a|a.name = "BugFix").first();
  var WeightFactorAttribute = DECENT!Attribute.allInstances().select(a|a.name = "WeightFactor").first();
  var TotalWeightAttribute = DECENT!Attribute.allInstances().select(a|a.name = "TotalWeight").first();
  var AverageWeightAttribute = DECENT!Attribute.allInstances().select(a|a.name = "AverageWeight").first();
  var TotalBugWeightAttribute = DECENT!Attribute.allInstances().select(a|a.name = "TotalBugWeight").first();
  var AverageBugWeightAttribute = DECENT!Attribute.allInstances().select(a|a.name = "AverageBugWeight").first();
  var CausesCountAttribute = DECENT!Attribute.allInstances().select(a|a.name = "CausesCount").first();
  var FixesCountAttribute = DECENT!Attribute.allInstances().select(a|a.name = "FixesCount").first();

  var GlobalBugFixAttribute = DECENT!Attribute.allInstances().select(a|a.name = "GlobalBugFix").first();
  var GlobalWeightFactorAttribute = DECENT!Attribute.allInstances().select(a|a.name = "GlobalWeightFactor").first();
  var GlobalTotalWeightAttribute = DECENT!Attribute.allInstances().select(a|a.name = "GlobalTotalWeight").first();
  var GlobalAverageWeightAttribute = DECENT!Attribute.allInstances().select(a|a.name = "GlobalAverageWeight").first();
  var GlobalTotalBugWeightAttribute = DECENT!Attribute.allInstances().select(a|a.name = "GlobalTotalBugWeight").first();
  var GlobalAverageBugWeightAttribute = DECENT!Attribute.allInstances().select(a|a.name = "GlobalAverageBugWeight").first();
  var GlobalCausesCountAttribute = DECENT!Attribute.allInstances().select(a|a.name = "GlobalCausesCount").first();
  var GlobalFixesCountAttribute = DECENT!Attribute.allInstances().select(a|a.name = "GlobalFixesCount").first();

  var CarriedTotalBugWeightAttribute = DECENT!Attribute.allInstances().select(a|a.name = "CarriedTotalBugWeight").first();
  var ClearedTotalBugWeightAttribute = DECENT!Attribute.allInstances().select(a|a.name = "ClearedTotalBugWeight").first();

  //TODO: need to accumulate a value? i.e. keep a balance of sorts? bug cause adds, bug fix removes
  // - or do we focus only on the states that introduce a bug and the activities that lead to them??
  //   in which case it would make sense to report the target state instead of the source state
  //   which would also prompt the use of a balance for all the weights in order to have a meaningful
  //   delta, or alternatively these could become activity values, although the intuition behind that 
  //   may be unclear 
  //DONE: also investigate the reasons behind those off-the-charts values in the preliminary report
  // -> asumed to be number conversion issues with numbers
  //DONE: need to investigate the failed assignments too, see the log for details
  // -> still an issue after improved assignments?
  //TODO: add ratios, e.g. averageBugWeight/averageWeight, also for totals, define interpretation

  ("...transforming states...").println();
  for (s in CFA!ArtifactState.allInstances()) {
  	var fileName = s.file.file_name;
  	var filePath = s.action.current_file_path;
  	var matchedStates = DECENT!State.allInstances().select(m|m.ID = s.ID and m.values.select(v|v.name = "FilePath").first().content = filePath);
  	var size = matchedStates.size();
	//check if correct matches can be found 
  	if (size <> 1) {
  		("  "+size+" DECENT matches found for: "+fileName+" at "+s.ID).println();
  		("    Avaliable states at "+s.ID+" are:").println();
  		for (x in DECENT!State.allInstances().select(x|x.ID = s.ID)) {
  			("      "+x.artifact.name+" at "+x.ID+" ("+x.values.select(v|v.name = "FilePath").first().content+")").println();
  		}
  	} else {
  		var state = matchedStates.first();
  		state.addValue(BugFixAttribute, s.bugFix);
  		state.addValue(WeightFactorAttribute, s.weightFactor);
  		state.addValue(TotalWeightAttribute, s.totalWeight);
  		state.addValue(TotalBugWeightAttribute, s.totalBugWeight);
  		state.addValue(AverageWeightAttribute, s.averageWeight);
  		state.addValue(AverageBugWeightAttribute, s.averageBugWeight);
  		state.addValue(CausesCountAttribute, s.causes.size().asDouble());
  		state.addValue(FixesCountAttribute, s.fixes.size().asDouble());

  		state.addValue(GlobalBugFixAttribute, s.globalState.bugFix);
  		state.addValue(GlobalWeightFactorAttribute, s.globalState.weightFactor);
  		state.addValue(GlobalTotalWeightAttribute, s.globalState.totalWeight);
  		state.addValue(GlobalTotalBugWeightAttribute, s.globalState.totalBugWeight);
  		state.addValue(GlobalAverageWeightAttribute, s.globalState.averageWeight);
  		state.addValue(GlobalAverageBugWeightAttribute, s.globalState.averageBugWeight);
  		state.addValue(GlobalCausesCountAttribute, s.globalState.causes.size().asDouble());
  		state.addValue(GlobalFixesCountAttribute, s.globalState.fixes.size().asDouble());
  		
  		var clearedBugWeight = 0.asDouble();
  		if (s.fixes.size()>0) {
  			clearedBugWeight = s.weightFactor * (s.fixes.size().asDouble()/s.fixes.size().asDouble());
  		}
   		state.addValue(ClearedTotalBugWeightAttribute, clearedBugWeight);
  		
  	}
  	
  }
  ("...adding carried weights...").println();
  
  for (a in DECENT!Artifact.allInstances()) {
  	var lastWeight = 0.asDouble();
  	for (s in a.states) {
  		var totalBugWeight = s.values.select(v|v.ofAttribute = TotalBugWeightAttribute).first().content;
  		lastWeight = lastWeight + totalBugWeight;
  		var clearedBugWeight = s.values.select(v|v.ofAttribute = ClearedTotalBugWeightAttribute).first().content;
  		lastWeight = lastWeight - clearedBugWeight;
  		s.addValue(CarriedTotalBugWeightAttribute, lastWeight);
  	}
  }
  
  ("...done!").println();
}

//TODO: duplicated from mg2decent3 -> factor out
operation Any addValue(attribute : DECENT!Attribute, content : Real) : DECENT!Value {
    var value : new DECENT!DoubleValue;
    value.name = attribute.name;
    value.content = content;
    self.values.add(value);
    value.ofAttribute = attribute;
//    self.artifact.attributes.add(attribute);
//    attribute.artifactTypes.add(self.artifact.type);
    return value;
}
