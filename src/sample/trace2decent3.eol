import "../decent/common.eol";

("Running trace2decent").println();
var Model = DECENT!Model.allInstances().first();

var attributes = new OrderedSet;
attributes.add("BugCount");
attributes.add("BugComments");
attributes.add("BugEvents");
attributes.add("BugResolutions");
  
for (a in attributes) {
    if (Model.attributePool.attributes.select(att|att.name = a).size() = 0) {
		var Attribute = new DECENT!Attribute;
		Attribute.name = a;
	    Model.attributePool.attributes.add(Attribute);
    }
}

var BugCountAttribute = DECENT!Attribute.allInstances().select(t|t.name = "BugCount").first();
var BugCommentsAttribute = DECENT!Attribute.allInstances().select(t|t.name = "BugComments").first();
var BugEventsAttribute = DECENT!Attribute.allInstances().select(t|t.name = "BugEvents").first();
var BugResolutionsAttribute = DECENT!Attribute.allInstances().select(t|t.name = "BugResolutions").first();

//TODO: filter for files only?
for (s in DECENT!State.allInstances()) {
	for (a in attributes) {
		s.values.removeAll(s.values.select(v|v.ofAttribute.name = a));
	}

	var bugCount = 0.asDouble();
	var commentCount = 0.asDouble();
	var eventCount = 0.asDouble();
	var resolutionsCount = 0.asDouble();
	for (t in TRACE!Trace.allInstances().select(x|x.target.commit_id = s.ID)) {
		//TODO:what if there are more than one?
		// => currently summed together
		bugCount = bugCount + 1;
		commentCount = commentCount + t.source.comments.size().asDouble();
		eventCount = eventCount + t.source.events.size().asDouble();
		resolutionsCount = resolutionsCount + t.source.events.select(x|x.newValue = "FIXED").size().asDouble();
		("  Issue "+t.source.issueId+" mapped to State "+s.ID+ " of " +s.artifact.name+" : "+resolutionsCount + " / " + eventCount + " / "+commentCount).println();
	}
	s.addValue(BugCountAttribute, bugCount);
	s.addValue(BugCommentsAttribute, commentCount);
	s.addValue(BugEventsAttribute, eventCount);
	s.addValue(BugResolutionsAttribute, resolutionsCount);
	//TODO: add lifetime, involved people, etc.
}
	
