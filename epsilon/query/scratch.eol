("Running scratch").println();

var seq = new Sequence();

for (s in seq) {
	s.println();
}

operation scratch1() {
	var Model = DECENT!Model.allInstances().first();
/*
  //TODO: Useful for debugging => move to a more appropriate location
  var Model = System.getContext().getModelRepository().getModelByName('DECENT');
  for (e in Model.getAliases()) {
  	e.println();
  }  
  for (e in Model.allContents()) {
  	//(e.eClass.name+" : "+e.name + " : "+ Model.getFullyQualifiedTypeNameOf(e)).println();
  }  
  for (e in Model.getAllOfType("DECENT::State")) {
  	(e.eClass.name+" : "+e.name + " : "+ Model.getFullyQualifiedTypeNameOf(e)).println();
  }  
  System.getContext().getModelRepository().getModelByName('DECENT').getAllOfType("DECENT::Model").println();
*/
	
	
	//var deltas = DECENT!Delta.allInstances().select(d|d.activity.deltas.select(x|x.onAttribute = d.onAttribute).size() > 1);
	
	var deltas = DECENT!Delta.allInstances().select(d|d.eContainer = null);
	("Floating Deltas:" + deltas.size()).println();
	//var deltas = DECENT!Delta.allInstances().select(d|d.eContainer.eContainer.deltas.select(x|x.key = d.eContainer.key).size() > 1);
	("Duplicate Deltas:" + deltas.size()).println();
	
	//var deltas = DECENT!Delta.allInstances().select(d|d.eContainer = null);
	//("Orphaned Deltas:" + deltas.size()).println();
	
	for (d in deltas) {
		//("Delta on : "+d.onAttribute.name+", activity to "+d.activity.targetState.ID+" of "+d.activity.targetState.artifact.name+" deltas: "+ d.activity.deltas.select(x|x.onAttribute = d.onAttribute).size()).println();
		("Delta on : "+d.eContainer.key.name+", activity to "+d.eContainer.eContainer.targetState.ID+" of "+d.eContainer.eContainer.targetState.artifact.name+" deltas: "+ d.eContainer.eContainer.deltas.select(x|x.key = d.eContainer.key).size()).println();
	}
	
	if (false) {
		for (v in DECENT!Value.allInstances.select(v|v.ofAttribute.name = "BugCount" and v.content <> 0.0)) {
			(v.eContainer.artifact.name+ " in " +v.eContainer.ID +" : " +v.name+" = "+v.content).println();
		
		}
		
		
		for (a in DECENT!Agent.allInstances) {
			(a.name + " " + a.activities.size()).println();
			a.attributes.put(DECENT!Attribute.allInstances.first(),DECENT!DoubleValue.allInstances.first());
		
		}
	
	}
}
