import "../libraries/mg/hunks.eol";
import "../libraries/decent/logging.eol";

  ("Running mg2normalized_hunks").log(1);
  var start = Native("java.lang.System").currentTimeMillis();

//var m : new MGx!Model;
var files = MG!File.allInstances();

for (f in files) {
	var orderedHunks = new OrderedSet;
    (f.file_name).log(1);
    for (a in f.actions) {
   		var hunks = f.hunks.select(h|h.revision = a.revision);
   		hunks.sortHunks();
   		hunks.normalizeHunks();
   		for (h in hunks) {
   			var o = h.old_start_line+":"+h.old_end_line+
				"->"+h.new_start_line+":"+h.new_end_line;
			
			//split, potentially remove normalized
			var on = h.~old_start_line_normalized+":"+h.~old_end_line_normalized+
				"->"+h.~new_start_line_normalized+":"+h.~new_end_line_normalized;
   		
   			("  "+h.revision.commit_id +": " +o + " :: "+on).log(3);
   		}
   		orderedHunks.addAll(hunks);
	}
	f.hunks = orderedHunks;
    f.content = f.content.sortBy(c|c.revision.commit_id);
   	for (c in f.content) {
    	("  Content: "+c.revision.commit_id).log(3);  
   	}
}

  var end = Native("java.lang.System").currentTimeMillis();
  var duration = end - start;
  ("Duration: "+duration.toMinutes().round(5)).log(1);
