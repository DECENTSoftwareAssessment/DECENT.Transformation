import "../libraries/cfa/common.eol";
import "../libraries/decent/common.eol";
import "../libraries/decent/logging.eol";

	//RUN AFTER decent2cfa!!!
  	"Running extra2cfa".log(1);

  	var start = Native("java.lang.System").currentTimeMillis();
	
	var cfn = CFA!CFN.allInstances().first();
  	
  	var WeightFactorAttribute = "WeightFactor".getCFAAttribute();
  	var TotalWeightAttribute = "TotalWeight".getCFAAttribute();
  	var AverageWeightAttribute = "AverageWeight".getCFAAttribute();

  	var factors = new Map;
  	factors.put("Refactoring","Based on commit messages, regex:.+(factored|factoring).*");
  	factors.put("Fix","Based on commit messages, regex:.*(fix|bug|bug:).*");
  	factors.put("IssueReference","Based on commit messages, regex:.*(bug\\s*:\\s*\\d+).*");
  	
  	cfn.addFactors(factors);

  	for (a in factors.keySet()) {
  		("  Processing extra factor "+a+"...").log(2);
	  	var factor = CFA!Factor.allInstances().select(x|x.name = a).first();
		var regex = factors.get(a).split("regex:")[1];
		addFactors(factor, regex);
		resetTotalWeights(factor);
		calculateTotalFactorWeights(factor);
		calculateAverageFactorWeights();
	}

    var end = Native("java.lang.System").currentTimeMillis();
    var duration = end - start;
    ("Duration: "+duration.toMinutes().round(5)).log(1);

operation addFactors(factor : CFA!Factor, regex : String) {
	for (s in CFA!CFAState.allInstances) {
		s.addFactor(factor, s.getMessageBasedWeight(regex));
	}
}

operation String getMessageBasedWeight(regex : String) : Real {
	var weight = 0.asDouble();
	regex = "(?s)"+regex;
	if (self.toLowerCase().matches(regex)) { 
		weight = 1.asDouble();
	}
	return weight;
}

operation CFA!GlobalState getMessageBasedWeight(regex : String) : Real {
	return self.revision.message.getMessageBasedWeight(regex);
}
operation CFA!ArtifactState getMessageBasedWeight(regex : String) : Real {
	return self.action.revision.message.getMessageBasedWeight(regex);
}
operation CFA!LogicalState getMessageBasedWeight(regex : String) : Real {
	return self.globalState.getMessageBasedWeight(regex);
}


	